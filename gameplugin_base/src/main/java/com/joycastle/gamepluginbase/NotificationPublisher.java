package com.joycastle.gamepluginbase;import android.app.Notification;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.BroadcastReceiver;import android.content.ComponentName;import android.content.Context;import android.content.Intent;import android.content.pm.PackageManager;import android.graphics.BitmapFactory;import android.support.v4.app.NotificationCompat;import android.util.Log;import java.util.ArrayList;import java.util.HashMap;public class NotificationPublisher extends BroadcastReceiver {    public static String NOTIFICATION_ID = "notification-id";    public static String NOTIFICATION_CHANNEL_ID = "notification-channel-id";    public static String NOTIFICATION_TITLE = "notification-title";    public static String NOTIFICATION_MSG = "notification-msg";    public static String NOTIFICATION_WHEN = "notification-when";    public static String NOTIFICATION_EXTRA = "notification-extra";    private int mBoardIndex = 1000;    @Override    public void onReceive(Context context, Intent intent) {        int notificationId              = intent.getIntExtra(NOTIFICATION_ID, 0);        String notificationChannelId    = intent.getStringExtra(NOTIFICATION_CHANNEL_ID);        String notificationTitle        = intent.getStringExtra(NOTIFICATION_TITLE);        String notificationMsg          = intent.getStringExtra(NOTIFICATION_MSG);        long notificationWhen           = intent.getLongExtra(NOTIFICATION_WHEN, 0);        String notificationExtra        = intent.getStringExtra(NOTIFICATION_EXTRA);        Intent notifyIntent = new Intent(context, NotificationClickReceiver.class);        notifyIntent.putExtra(NOTIFICATION_EXTRA, notificationExtra);        PendingIntent pendingIntent = PendingIntent                .getBroadcast(context, this.mBoardIndex, notifyIntent, PendingIntent.FLAG_UPDATE_CURRENT);        this.mBoardIndex++;        Notification notification = new NotificationCompat                .Builder(context, notificationChannelId)                .setSmallIcon(R.mipmap.ic_launcher)                .setLargeIcon(BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher))                .setContentTitle(notificationTitle)                .setContentText(notificationMsg)                .setStyle(new NotificationCompat.BigTextStyle().bigText(notificationMsg))                .setContentIntent(pendingIntent)                .setPriority(NotificationCompat.PRIORITY_HIGH)                .setWhen(notificationWhen)                .setAutoCancel(true)                .setDefaults(Notification.DEFAULT_ALL)                .setNumber(1)                .build();        NotificationManager notificationManager =                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);        notificationManager.notify(notificationId, notification);    }}class NotificationClickReceiver extends BroadcastReceiver {    public static String NOTIFICATION_EXTRA = "notification-extra";    @Override    public void onReceive(Context context, Intent intent) {        String notificationExtra        = intent.getStringExtra(NOTIFICATION_EXTRA);        HashMap extra = new HashMap();        extra.put("from", notificationExtra);        SystemUtil.getInstance().exeNotifyHandler(extra);        PackageManager packageManager = context.getPackageManager();        String packageName = context.getPackageName();        ComponentName componentName = packageManager                .getLaunchIntentForPackage(packageName).getComponent();        Intent newIntent = new Intent(context, SystemUtil.getInstance().getActivity().getClass());        newIntent.addCategory(Intent.CATEGORY_LAUNCHER);        newIntent.setComponent(componentName);        newIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);        context.startActivity(newIntent);    }}